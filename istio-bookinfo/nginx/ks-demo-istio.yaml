---
apiVersion: app.k8s.io/v1beta1
kind: Application
metadata:
  annotations:
    servicemesh.kubesphere.io/enabled: "true"
  labels:
    app.kubernetes.io/name: istio-demo
  name: istio-demo
  namespace: default
spec:
  addOwnerRef: true
  selector:
    matchLabels:
      app.kubernetes.io/name: istio-demo
---
kind: Service
apiVersion: v1
metadata:
  name: nginx
  namespace: default
  labels:
    app: nginx
    app.kubernetes.io/name: istio-demo
  annotations:
    kubesphere.io/creator: admin
    kubesphere.io/serviceType: statelessservice
    servicemesh.kubesphere.io/enabled: 'true'
spec:
  ports:
    - name: http-80
      protocol: TCP
      port: 80
      targetPort: 80
  selector:
    app: nginx
    app.kubernetes.io/name: istio-demo
  type: ClusterIP
  sessionAffinity: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    servicemesh.kubesphere.io/enabled: 'true'
  labels:
    app: nginx
    app.kubernetes.io/name: istio-demo
    version: v1
  name: nginx-v1
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
      app.kubernetes.io/name: istio-demo
      version: v1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: 'true'
      labels:
        app: nginx
        app.kubernetes.io/name: istio-demo
        version: v1
    spec:
      containers:
        - image: 'nginx:alpine'
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
            - containerPort: 80
              name: http-80
              protocol: TCP
          resources:
            requests:
              memory: 16Mi
              cpu: 20m
            limits:
              memory: 512Mi
              cpu: 1
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  labels:
    app: nginx
    app.kubernetes.io/name: istio-demo
    app.kubernetes.io/version: v1
    version: v1
  name: nginx
  namespace: default
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      name: http
      number: 80
      protocol: HTTP
    hosts:
    - ng.demo.com
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  labels:
    app: nginx
    app.kubernetes.io/name: istio-demo
    app.kubernetes.io/version: v1
    version: v1
  name: nginx
  namespace: default
spec:
  hosts:
  - nginx
  http:
  - match:
    - port: 80
    route:
    - destination:
        host: nginx
        port:
          number: 80
        subset: v1
      weight: 87
    - destination:
        host: nginx
        port:
          number: 80
        subset: v2
      weight: 13
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: nginx
  namespace: default
  labels:
    app: nginx
    app.kubernetes.io/name: istio-demo
    app.kubernetes.io/version: v1
    version: v1
spec:
  host: nginx
  trafficPolicy:
    loadBalancer:
      simple: LEAST_CONN
  subsets:
  - name: v1
    labels:
      version: v1
  - name: v2
    labels:
      version: v2
